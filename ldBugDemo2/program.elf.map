
Allocating common symbols
Common symbol       size              file

var                 0x1               var.obj

Discarded input sections

 .drectve       0x0000000000000000       0x2f main.obj
 .chks64        0x0000000000000000       0x38 main.obj
 .drectve       0x0000000000000000       0x2f mod1MSFT.obj
 .chks64        0x0000000000000000       0x28 mod1MSFT.obj
 .drectve       0x0000000000000000       0x2f mod2MSFT.obj
 .chks64        0x0000000000000000       0x28 mod2MSFT.obj
 .drectve       0x0000000000000000       0x2f mod3MSFT.obj
 .chks64        0x0000000000000000       0x28 mod3MSFT.obj
 .drectve       0x0000000000000000       0x2f var.obj
 .chks64        0x0000000000000000       0x20 var.obj

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD main.obj
LOAD mod1MSFT.obj
LOAD mod2MSFT.obj
LOAD mod3MSFT.obj
LOAD var.obj
                [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x400000))
                0x0000000000400120                . = (SEGMENT_START ("text-segment", 0x400000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rela.dyn
 *(.rela.init)
 *(.rela.text .rela.text.* .rela.gnu.linkonce.t.*)
 *(.rela.fini)
 *(.rela.rodata .rela.rodata.* .rela.gnu.linkonce.r.*)
 *(.rela.data .rela.data.* .rela.gnu.linkonce.d.*)
 *(.rela.tdata .rela.tdata.* .rela.gnu.linkonce.td.*)
 *(.rela.tbss .rela.tbss.* .rela.gnu.linkonce.tb.*)
 *(.rela.ctors)
 *(.rela.dtors)
 *(.rela.got)
 *(.rela.bss .rela.bss.* .rela.gnu.linkonce.b.*)
 *(.rela.ldata .rela.ldata.* .rela.gnu.linkonce.l.*)
 *(.rela.lbss .rela.lbss.* .rela.gnu.linkonce.lb.*)
 *(.rela.lrodata .rela.lrodata.* .rela.gnu.linkonce.lr.*)
 *(.rela.ifunc)

.rela.plt       0x0000000000400120        0x0
 *(.rela.plt)
                [!provide]                        PROVIDE (__rela_iplt_start = .)
 *(.rela.iplt)
                [!provide]                        PROVIDE (__rela_iplt_end = .)
                0x0000000000401000                . = ALIGN (CONSTANT (MAXPAGESIZE))

.init
 *(SORT_NONE(.init))

.plt
 *(.plt)
 *(.iplt)

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.text
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(SORT_BY_NAME(.text.sorted.*))
 *(.text .stub .text.* .gnu.linkonce.t.*)
 *(.gnu.warning)

.text$mn        0x0000000000401000       0x48
 .text$mn       0x0000000000401000       0x18 main.obj
                0x0000000000401000                begin
 *fill*         0x0000000000401018        0x8 
 .text$mn       0x0000000000401020        0x8 mod1MSFT.obj
                0x0000000000401020                getaddr1
 *fill*         0x0000000000401028        0x8 
 .text$mn       0x0000000000401030        0x8 mod2MSFT.obj
                0x0000000000401030                getaddr2
 *fill*         0x0000000000401038        0x8 
 .text$mn       0x0000000000401040        0x8 mod3MSFT.obj
                0x0000000000401040                getaddr3

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)
                0x0000000000402000                . = ALIGN (CONSTANT (MAXPAGESIZE))
                0x0000000000402000                . = SEGMENT_START ("rodata-segment", (ALIGN (CONSTANT (MAXPAGESIZE)) + (. & (CONSTANT (MAXPAGESIZE) - 0x1))))

.rodata
 *(.rodata .rodata.* .gnu.linkonce.r.*)

.xdata          0x0000000000402000        0x8
 .xdata         0x0000000000402000        0x8 main.obj

.pdata          0x0000000000402008        0xc
 .pdata         0x0000000000402008        0xc main.obj

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges*)
                0x0000000000403014                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges*)

.tdata          0x0000000000403014        0x0
                [!provide]                        PROVIDE (__tdata_start = .)
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x0000000000403014        0x0
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)

.init_array     0x0000000000403014        0x0
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end = .)

.fini_array     0x0000000000403014        0x0
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end = .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got
 *(.got)
 *(.igot)
                0x0000000000403014                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0x18)?0x18:0x0)

.got.plt        0x0000000000403014        0x0
 *(.got.plt)
 *(.igot.plt)

.data
 *(.data .data.* .gnu.linkonce.d.*)

.data1
 *(.data1)
                0x0000000000403014                _edata = .
                [!provide]                        PROVIDE (edata = .)
                0x0000000000403014                . = .
                0x0000000000403014                __bss_start = .

.bss            0x0000000000403014        0x4
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 *(COMMON)
 COMMON         0x0000000000403014        0x1 var.obj
                0x0000000000403014                var
                0x0000000000403018                . = ALIGN ((. != 0x0)?0x8:0x1)
 *fill*         0x0000000000403015        0x3 

.lbss
 *(.dynlbss)
 *(.lbss .lbss.* .gnu.linkonce.lb.*)
 *(LARGE_COMMON)
                0x0000000000403018                . = ALIGN (0x8)
                0x0000000000403018                . = SEGMENT_START ("ldata-segment", .)

.lrodata
 *(.lrodata .lrodata.* .gnu.linkonce.lr.*)

.ldata          0x0000000000405018        0x0
 *(.ldata .ldata.* .gnu.linkonce.l.*)
                0x0000000000405018                . = ALIGN ((. != 0x0)?0x8:0x1)
                0x0000000000405018                . = ALIGN (0x8)
                0x0000000000403018                _end = .
                [!provide]                        PROVIDE (end = .)
                0x0000000000405018                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.gnu.build.attributes
 *(.gnu.build.attributes .gnu.build.attributes.*)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(program.elf elf64-x86-64)

.unqRlcs        0x0000000000000000        0x0
 .unqRlcs       0x0000000000000000        0x0 main.obj
 .unqRlcs       0x0000000000000000        0x0 mod1MSFT.obj
 .unqRlcs       0x0000000000000000        0x0 mod2MSFT.obj
 .unqRlcs       0x0000000000000000        0x0 mod3MSFT.obj
 .unqRlcs       0x0000000000000000        0x0 var.obj

.debug$S        0x0000000000000000      0x2c8
 .debug$S       0x0000000000000000       0x8c main.obj
 .debug$S       0x000000000000008c       0x90 mod1MSFT.obj
 .debug$S       0x000000000000011c       0x90 mod2MSFT.obj
 .debug$S       0x00000000000001ac       0x90 mod3MSFT.obj
 .debug$S       0x000000000000023c       0x8c var.obj
